module JOUEUR = 
struct 
  type classe = Archer | Guerrier | Magicien
  type genre = Homme | Femme
  type objet = Poulet | Eponge | Piece
  type qte_objet = { obj : objet; quantite : int }
      (* type sac = { poulet : qte_objet; eponge : qte_objet; piece : qte_objet } A REVOIR*)
  type sac = { poulet : int; eponge : int; piece : int } 
  type perso = { nom : string; sexe : genre; role : classe; pv : int; xp : int; le_sac : sac; niveau : int } 
  
  let classe_genre = fun perso -> match (perso.sexe, perso.role) with
    | (Homme, Archer) -> "Archer"
    | (Homme, Guerrier) -> "Guerrier"
    | (Homme, Magicien) -> "Magicien" 
    | (Femme, Archer) -> "Archere"
    | (Femme, Guerrier) -> "Guerriere"
    | (Femme, Magicien) -> "Magicienne"
      
  
  let init_sac = { poulet = 0; eponge = 0; piece = 0 }
                 
  let init_perso = { nom = "Maxime"; sexe = Femme; role = Archer; pv = 20; xp = 0; le_sac = init_sac; niveau = 1 } 
  
  let contenu_sac = fun sac -> string_of_int sac.poulet ^ " poulet" ^ "\n" ^ 
                               string_of_int sac.eponge ^ " éponges" ^ "\n"
                               ^ string_of_int sac.piece ^ " pièces"
  let afficher_sac = fun sac -> print_string(contenu_sac sac)
      (*let remplir_sac = fun x y z -> { poulet = x; eponge = y; piece = z }  *)
  let etat_perso = fun perso -> perso.nom ^ " | " ^ (classe_genre perso) ^ "  Niveau " ^ string_of_int (perso.niveau) ^ "\n"
                                ^ " Points de vie  | " ^ string_of_int perso.pv ^ "\n" ^
                                " Expérience  | " ^ string_of_int perso.xp ^ "\n" 
                                ^ "Sac : " ^ "\n" ^ contenu_sac perso.le_sac
  let afficher_etat_perso = fun perso -> print_string(etat_perso perso)
end;;